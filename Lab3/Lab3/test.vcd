$date
	Mon Aug 11 22:01:11 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var reg 1 ! Clk $end
$var reg 1 " Start $end
$var reg 1 # halt_flag $end
$var integer 32 $ error_count [31:0] $end
$var integer 32 % i [31:0] $end
$scope module CPU $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var wire 1 & zero $end
$var wire 32 ' shifted_branch_offset [31:0] $end
$var wire 1 ( shifhterSource $end
$var wire 5 ) shamt [4:0] $end
$var wire 32 * sftResult [31:0] $end
$var wire 32 + pc_plus4 [31:0] $end
$var wire 32 , pc_out [31:0] $end
$var wire 32 - pc_in [31:0] $end
$var wire 32 . pc_branch [31:0] $end
$var wire 32 / pc_before_jump [31:0] $end
$var wire 32 0 pc_before_jr [31:0] $end
$var wire 1 1 overflow $end
$var wire 1 2 leftRight $end
$var wire 32 3 instr [31:0] $end
$var wire 32 4 extendData [31:0] $end
$var wire 32 5 WriteData [31:0] $end
$var wire 1 6 RegWrite $end
$var wire 2 7 RegDst [1:0] $end
$var wire 32 8 RTdata [31:0] $end
$var wire 32 9 RSdata [31:0] $end
$var wire 2 : MemtoReg [1:0] $end
$var wire 1 ; MemWrite $end
$var wire 1 < MemRead $end
$var wire 32 = MemData [31:0] $end
$var wire 1 > Jump $end
$var wire 1 ? JRsrc $end
$var wire 5 @ FinalRegNo [4:0] $end
$var wire 1 A FURslt $end
$var wire 32 B FURres [31:0] $end
$var wire 2 C Branch [1:0] $end
$var wire 32 D ALUsrcData [31:0] $end
$var wire 32 E ALUresult [31:0] $end
$var wire 4 F ALU_operation [3:0] $end
$var wire 1 G ALUSrc $end
$var wire 2 H ALUOp [1:0] $end
$scope module ALU $end
$var wire 1 1 overflow $end
$var wire 1 & zero_o $end
$var wire 32 I src2_i [31:0] $end
$var wire 32 J src1_i [31:0] $end
$var wire 4 K ctrl_i [3:0] $end
$var parameter 4 L ADD $end
$var parameter 4 M AND $end
$var parameter 4 N NOR $end
$var parameter 4 O OR $end
$var parameter 4 P SLT $end
$var parameter 4 Q SUB $end
$var reg 32 R result_o [31:0] $end
$upscope $end
$scope module ALU_Control $end
$var wire 6 S funct_i [5:0] $end
$var wire 2 T ALUOp_i [1:0] $end
$var parameter 6 U ADD $end
$var parameter 6 V AND $end
$var parameter 6 W JR $end
$var parameter 6 X NOR $end
$var parameter 6 Y OR $end
$var parameter 6 Z SLL $end
$var parameter 6 [ SLLV $end
$var parameter 6 \ SLT $end
$var parameter 6 ] SRL $end
$var parameter 6 ^ SRLV $end
$var parameter 6 _ SUB $end
$var reg 4 ` ALUCtrl_o [3:0] $end
$var reg 1 A FURslt_o $end
$var reg 1 ? JR_source_o $end
$var reg 1 2 leftRight_o $end
$var reg 1 ( shifhterSource_o $end
$upscope $end
$scope module BranchTgt $end
$var wire 32 a sum_o [31:0] $end
$var wire 32 b src2_i [31:0] $end
$var wire 32 c src1_i [31:0] $end
$upscope $end
$scope module Data_Memory $end
$var wire 1 ! clk_i $end
$var wire 32 d data_i [31:0] $end
$var wire 32 e addr_i [31:0] $end
$var wire 1 ; MemWrite_i $end
$var wire 1 < MemRead_i $end
$var reg 32 f data_o [31:0] $end
$var integer 32 g i [31:0] $end
$upscope $end
$scope module IM $end
$var wire 32 h pc_addr_i [31:0] $end
$var reg 32 i instr_o [31:0] $end
$var integer 32 j i [31:0] $end
$upscope $end
$scope module MUX_ALUSrc $end
$var wire 1 G select_i $end
$var wire 32 k data_o [31:0] $end
$var wire 32 l data1_i [31:0] $end
$var wire 32 m data0_i [31:0] $end
$var parameter 32 n size $end
$upscope $end
$scope module MUX_FUR $end
$var wire 32 o data0_i [31:0] $end
$var wire 1 A select_i $end
$var wire 32 p data_o [31:0] $end
$var wire 32 q data1_i [31:0] $end
$var parameter 32 r size $end
$upscope $end
$scope module MUX_JR $end
$var wire 1 ? select_i $end
$var wire 32 s data_o [31:0] $end
$var wire 32 t data1_i [31:0] $end
$var wire 32 u data0_i [31:0] $end
$var parameter 32 v size $end
$upscope $end
$scope module MUX_RegDst $end
$var wire 5 w data0_i [4:0] $end
$var wire 5 x data1_i [4:0] $end
$var wire 5 y data2_i [4:0] $end
$var wire 2 z select_i [1:0] $end
$var wire 5 { data_o [4:0] $end
$var parameter 32 | size $end
$upscope $end
$scope module MUX_branch $end
$var wire 32 } data1_i [31:0] $end
$var wire 1 ~ select_i $end
$var wire 32 !" data_o [31:0] $end
$var wire 32 "" data0_i [31:0] $end
$var parameter 32 #" size $end
$upscope $end
$scope module MUX_jump $end
$var wire 32 $" data0_i [31:0] $end
$var wire 32 %" data1_i [31:0] $end
$var wire 1 > select_i $end
$var wire 32 &" data_o [31:0] $end
$var parameter 32 '" size $end
$upscope $end
$scope module MUX_shamt $end
$var wire 5 (" data0_i [4:0] $end
$var wire 5 )" data1_i [4:0] $end
$var wire 1 ( select_i $end
$var wire 5 *" data_o [4:0] $end
$var parameter 32 +" size $end
$upscope $end
$scope module MainControl $end
$var wire 1 G ALUSrc_o $end
$var wire 1 > Jump_o $end
$var wire 1 6 RegWrite_o $end
$var wire 6 ," instr_op_i [5:0] $end
$var wire 2 -" RegDst_o [1:0] $end
$var wire 2 ." MemtoReg_o [1:0] $end
$var wire 1 ; MemWrite_o $end
$var wire 1 < MemRead_o $end
$var wire 2 /" Branch_o [1:0] $end
$var wire 2 0" ALU_op_o [1:0] $end
$var parameter 6 1" ADDI $end
$var parameter 6 2" BEQ $end
$var parameter 6 3" BNE $end
$var parameter 6 4" J $end
$var parameter 6 5" JAL $end
$var parameter 6 6" LW $end
$var parameter 6 7" Rtype $end
$var parameter 6 8" SW $end
$upscope $end
$scope module Mux_Final $end
$var wire 32 9" data0_i [31:0] $end
$var wire 32 :" data1_i [31:0] $end
$var wire 2 ;" select_i [1:0] $end
$var wire 32 <" data_o [31:0] $end
$var wire 32 =" data2_i [31:0] $end
$var parameter 32 >" size $end
$upscope $end
$scope module PC $end
$var wire 1 ! clk_i $end
$var wire 32 ?" pc_in_i [31:0] $end
$var wire 1 " rst_i $end
$var reg 32 @" pc_out_o [31:0] $end
$upscope $end
$scope module PCplus4 $end
$var wire 32 A" src1_i [31:0] $end
$var wire 32 B" src2_i [31:0] $end
$var wire 32 C" sum_o [31:0] $end
$upscope $end
$scope module Registers $end
$var wire 5 D" RDaddr_i [4:0] $end
$var wire 32 E" RDdata_i [31:0] $end
$var wire 5 F" RSaddr_i [4:0] $end
$var wire 32 G" RSdata_o [31:0] $end
$var wire 5 H" RTaddr_i [4:0] $end
$var wire 32 I" RTdata_o [31:0] $end
$var wire 1 J" RegWrite_i $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$upscope $end
$scope module SE $end
$var wire 16 K" data_i [15:0] $end
$var wire 32 L" data_o [31:0] $end
$upscope $end
$scope module branchSE $end
$var wire 32 M" data_i [31:0] $end
$var wire 32 N" data_o [31:0] $end
$upscope $end
$scope module shifter $end
$var wire 1 2 leftRight $end
$var wire 32 O" sftSrc [31:0] $end
$var wire 5 P" shamt [4:0] $end
$var wire 32 Q" result [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000 >"
b100100 8"
b0 7"
b101100 6"
b11 5"
b111 4"
b101 3"
b110 2"
b1001 1"
b101 +"
b100000 '"
b100000 #"
b101 |
b100000 v
b100000 r
b100000 n
b100001 _
b1000 ^
b100 ]
b101000 \
b110 [
b10 Z
b100101 Y
b101011 X
b1100 W
b100110 V
b100011 U
b110 Q
b111 P
b0 O
b1101 N
b1 M
b10 L
$end
#0
$dumpvars
bx Q"
bx P"
bx O"
bx00 N"
bx M"
bx L"
bx K"
xJ"
bx I"
bx H"
bx G"
bx F"
bx E"
bx D"
bx C"
b100 B"
bx A"
bx @"
bx ?"
bx ="
bx <"
bx ;"
bx :"
b0 9"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx *"
bx )"
bx ("
bx &"
bx00 %"
bx $"
bx ""
bx !"
x~
bx }
bx {
bx z
b11111 y
bx x
bx w
bx u
bx t
bx s
bx q
b0 p
b0 o
bx m
bx l
bx k
b100000 j
bx i
bx h
b10000000 g
bx f
b0 e
bx d
bx c
bx00 b
bx a
bx `
bx T
bx S
b0 R
bx K
bx J
bx I
bx H
xG
bx F
b0 E
bx D
bx C
b0 B
0A
bx @
0?
x>
bx =
x<
x;
bx :
bx 9
bx 8
bx 7
x6
bx 5
bx 4
bx 3
02
x1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
0(
bx00 '
1&
bx %
b0 $
0#
0"
0!
$end
#2000
b101 B
b101 e
b101 p
b101 9"
0&
b101 E
b101 R
b101 o
b100 -
b100 s
b100 ?"
01
1J"
b100 0
b100 u
b100 &"
16
0~
b100 /
b100 !"
b100 $"
b0 *
b0 q
b0 Q"
1G
b101 5
b101 <"
b101 E"
b10100 .
b10100 a
b10100 }
b10100 '
b10100 b
b10100 N"
b101 D
b101 I
b101 k
b0 )"
b1 @
b1 {
b1 D"
b0 )
b0 *"
b0 P"
b10 F
b10 K
b10 `
b0 7
b0 z
b0 -"
b0 :
b0 ."
b0 ;"
b0 C
b0 /"
b0 H
b0 T
b0 0"
0>
b101 4
b101 l
b101 L"
b101 M"
b101 K"
b0 8
b0 d
b0 m
b0 I"
b0 O"
b1 H"
b0 9
b0 J
b0 t
b0 G"
b0 F"
b0 x
b1 w
b0 ("
b101 S
0<
0;
b1001 ,"
b1000000000000010100 %"
b100100000000010000000000000101 3
b100100000000010000000000000101 i
b100 +
b100 ""
b100 ="
b100 C"
b0 ,
b0 c
b0 h
b0 @"
b0 A"
1!
#4000
0!
#6000
1!
#8000
0!
#10000
b11 5
b11 <"
b11 E"
b11 B
b11 e
b11 p
b11 9"
b11 E
b11 R
b11 o
b1000 -
b1000 s
b1000 ?"
b1100 '
b1100 b
b1100 N"
b11 D
b11 I
b11 k
b10 @
b10 {
b10 D"
b10 F
b10 K
b10 `
b1000 0
b1000 u
b1000 &"
b11 4
b11 l
b11 L"
b11 M"
b11 K"
b10 H"
b10 w
b11 S
b10000000000000001100 %"
b1000 /
b1000 !"
b1000 $"
b100100000000100000000000000011 3
b100100000000100000000000000011 i
b0 *
b0 q
b0 Q"
b1000 +
b1000 ""
b1000 ="
b1000 C"
b10000 .
b10000 a
b10000 }
b100 ,
b100 c
b100 h
b100 @"
b100 A"
b0 8
b0 d
b0 m
b0 I"
b0 O"
1!
1"
#12000
0!
#14000
b1 5
b1 <"
b1 E"
b1 B
b1 e
b1 p
b1 9"
b1 E
b1 R
b1 o
b1100 -
b1100 s
b1100 ?"
b100 '
b100 b
b100 N"
b1 D
b1 I
b1 k
b11 @
b11 {
b11 D"
b10 F
b10 K
b10 `
b1100 0
b1100 u
b1100 &"
b1 4
b1 l
b1 L"
b1 M"
b1 K"
b11 H"
b11 w
b1 S
b11000000000000000100 %"
b1100 /
b1100 !"
b1100 $"
b100100000000110000000000000001 3
b100100000000110000000000000001 i
b0 *
b0 q
b0 Q"
b1100 +
b1100 ""
b1100 ="
b1100 C"
b1100 .
b1100 a
b1100 }
b1000 ,
b1000 c
b1000 h
b1000 @"
b1000 A"
b0 8
b0 d
b0 m
b0 I"
b0 O"
1!
#16000
0!
#18000
b1000 5
b1000 <"
b1000 E"
b1000 B
b1000 e
b1000 p
b1000 9"
0G
b10000 -
b10000 s
b10000 ?"
b1000000010001100 '
b1000000010001100 b
b1000000010001100 N"
b11 D
b11 I
b11 k
b101 )"
b1000 E
b1000 R
b1000 o
b100 @
b100 {
b100 D"
b10 F
b10 K
b10 `
b1 7
b1 z
b1 -"
b10 H
b10 T
b10 0"
b10000 0
b10000 u
b10000 &"
b10000000100011 4
b10000000100011 l
b10000000100011 L"
b10000000100011 M"
b10000000100011 K"
b10 H"
b101 9
b101 J
b101 t
b101 G"
b1 F"
b100 x
b10 w
b100011 S
b0 ,"
b100010001000000010001100 %"
b10000 /
b10000 !"
b10000 $"
b1000100010000000100011 3
b1000100010000000100011 i
b11 *
b11 q
b11 Q"
b10000 +
b10000 ""
b10000 ="
b10000 C"
b1000000010011000 .
b1000000010011000 a
b1000000010011000 }
b1100 ,
b1100 c
b1100 h
b1100 @"
b1100 A"
b11 8
b11 d
b11 m
b11 I"
b11 O"
1!
#20000
0!
#22000
b10 5
b10 <"
b10 E"
b10 B
b10 e
b10 p
b10 9"
b101 @
b101 {
b101 D"
b10 E
b10 R
b10 o
b10100 -
b10100 s
b10100 ?"
b1010000010000100 '
b1010000010000100 b
b1010000010000100 N"
b110 F
b110 K
b110 `
b10100 0
b10100 u
b10100 &"
b10100000100001 4
b10100000100001 l
b10100000100001 L"
b10100000100001 M"
b10100000100001 K"
b101 x
b100001 S
b100010001010000010000100 %"
b10100 /
b10100 !"
b10100 $"
b1000100010100000100001 3
b1000100010100000100001 i
b10100 +
b10100 ""
b10100 ="
b10100 C"
b1010000010010100 .
b1010000010010100 a
b1010000010010100 }
b10000 ,
b10000 c
b10000 h
b10000 @"
b10000 A"
1!
#24000
0!
#26000
b1 5
b1 <"
b1 E"
b1 B
b1 e
b1 p
b1 9"
b110 @
b110 {
b110 D"
b1 E
b1 R
b1 o
b11000 -
b11000 s
b11000 ?"
b1100000010011000 '
b1100000010011000 b
b1100000010011000 N"
b1 F
b1 K
b1 `
b11000 0
b11000 u
b11000 &"
b11000000100110 4
b11000000100110 l
b11000000100110 L"
b11000000100110 M"
b11000000100110 K"
b110 x
b100110 S
b100010001100000010011000 %"
b11000 /
b11000 !"
b11000 $"
b1000100011000000100110 3
b1000100011000000100110 i
b11000 +
b11000 ""
b11000 ="
b11000 C"
b1100000010101100 .
b1100000010101100 a
b1100000010101100 }
b10100 ,
b10100 c
b10100 h
b10100 @"
b10100 A"
1!
#28000
0!
#30000
b111 5
b111 <"
b111 E"
b111 B
b111 e
b111 p
b111 9"
b111 @
b111 {
b111 D"
b111 E
b111 R
b111 o
b11100 -
b11100 s
b11100 ?"
b1110000010010100 '
b1110000010010100 b
b1110000010010100 N"
b0 F
b0 K
b0 `
b11100 0
b11100 u
b11100 &"
b11100000100101 4
b11100000100101 l
b11100000100101 L"
b11100000100101 M"
b11100000100101 K"
b111 x
b100101 S
b100010001110000010010100 %"
b11100 /
b11100 !"
b11100 $"
b1000100011100000100101 3
b1000100011100000100101 i
b11100 +
b11100 ""
b11100 ="
b11100 C"
b1110000010101100 .
b1110000010101100 a
b1110000010101100 }
b11000 ,
b11000 c
b11000 h
b11000 @"
b11000 A"
1!
#32000
0!
#34000
b11111111111111111111111111111000 5
b11111111111111111111111111111000 <"
b11111111111111111111111111111000 E"
b11111111111111111111111111111000 B
b11111111111111111111111111111000 e
b11111111111111111111111111111000 p
b11111111111111111111111111111000 9"
b1000 @
b1000 {
b1000 D"
b11111111111111111111111111111000 E
b11111111111111111111111111111000 R
b11111111111111111111111111111000 o
b100000 -
b100000 s
b100000 ?"
b10000000010101100 '
b10000000010101100 b
b10000000010101100 N"
b1101 F
b1101 K
b1101 `
b100000 0
b100000 u
b100000 &"
b100000000101011 4
b100000000101011 l
b100000000101011 L"
b100000000101011 M"
b100000000101011 K"
b1000 x
b101011 S
b100010010000000010101100 %"
b100000 /
b100000 !"
b100000 $"
b1000100100000000101011 3
b1000100100000000101011 i
b100000 +
b100000 ""
b100000 ="
b100000 C"
b10000000011001000 .
b10000000011001000 a
b10000000011001000 }
b11100 ,
b11100 c
b11100 h
b11100 @"
b11100 A"
1!
#36000
0!
#38000
b0 5
b0 <"
b0 E"
b0 B
b0 e
b0 p
b0 9"
b1001 @
b1001 {
b1001 D"
1&
b0 E
b0 R
b0 o
b100100 -
b100100 s
b100100 ?"
b10010000010100000 '
b10010000010100000 b
b10010000010100000 N"
b111 F
b111 K
b111 `
b100100 0
b100100 u
b100100 &"
b100100000101000 4
b100100000101000 l
b100100000101000 L"
b100100000101000 M"
b100100000101000 K"
b1001 x
b101000 S
b100010010010000010100000 %"
b100100 /
b100100 !"
b100100 $"
b1000100100100000101000 3
b1000100100100000101000 i
b100100 +
b100100 ""
b100100 ="
b100100 C"
b10010000011000000 .
b10010000011000000 a
b10010000011000000 }
b100000 ,
b100000 c
b100000 h
b100000 @"
b100000 A"
1!
#40000
0!
#42000
b100 5
b100 <"
b100 E"
b1010 @
b1010 {
b1010 D"
b100 B
b100 e
b100 p
b100 9"
b101000 -
b101000 s
b101000 ?"
b10100001000001000 '
b10100001000001000 b
b10100001000001000 N"
b100 *
b100 q
b100 Q"
b1 D
b1 I
b1 k
b0 )"
b10 )
b10 *"
b10 P"
1A
bx F
bx K
bx `
b101000 0
b101000 u
b101000 &"
b101000010000010 4
b101000010000010 l
b101000010000010 L"
b101000010000010 M"
b101000010000010 K"
b1 8
b1 d
b1 m
b1 I"
b1 O"
b11 H"
b0 9
b0 J
b0 t
b0 G"
b0 F"
b1010 x
b11 w
b10 ("
b10 S
b11010100001000001000 %"
b101000 /
b101000 !"
b101000 $"
b110101000010000010 3
b110101000010000010 i
b101000 +
b101000 ""
b101000 ="
b101000 C"
b10100001000101100 .
b10100001000101100 a
b10100001000101100 }
b100100 ,
b100100 c
b100100 h
b100100 @"
b100100 A"
1!
#44000
0!
#46000
b10 5
b10 <"
b10 E"
b1011 @
b1011 {
b1011 D"
b10 B
b10 e
b10 p
b10 9"
b101100 -
b101100 s
b101100 ?"
b10110000100010000 '
b10110000100010000 b
b10110000100010000 N"
b10 *
b10 q
b10 Q"
b101 D
b101 I
b101 k
b1 )
b1 *"
b1 P"
12
1A
bx F
bx K
bx `
b101100 0
b101100 u
b101100 &"
b101100001000100 4
b101100001000100 l
b101100001000100 L"
b101100001000100 M"
b101100001000100 K"
b101 8
b101 d
b101 m
b101 I"
b101 O"
b1 H"
b1011 x
b1 w
b1 ("
b100 S
b1010110000100010000 %"
b101100 /
b101100 !"
b101100 $"
b10101100001000100 3
b10101100001000100 i
b101100 +
b101100 ""
b101100 ="
b101100 C"
b10110000100111000 .
b10110000100111000 a
b10110000100111000 }
b101000 ,
b101000 c
b101000 h
b101000 @"
b101000 A"
1!
#48000
0!
#50000
b1000 5
b1000 <"
b1000 E"
b1100 @
b1100 {
b1100 D"
b1000 B
b1000 e
b1000 p
b1000 9"
b110000 -
b110000 s
b110000 ?"
b11000000000011000 '
b11000000000011000 b
b11000000000011000 N"
b1000 *
b1000 q
b1000 Q"
b1 D
b1 I
b1 k
b11 )"
b11 )
b11 *"
b11 P"
1(
02
1A
bx F
bx K
bx `
b110000 0
b110000 u
b110000 &"
b110000000000110 4
b110000000000110 l
b110000000000110 L"
b110000000000110 M"
b110000000000110 K"
b1 8
b1 d
b1 m
b1 I"
b1 O"
b11 H"
b11 9
b11 J
b11 t
b11 G"
b10 F"
b1100 x
b11 w
b0 ("
b110 S
b1000011011000000000011000 %"
b110000 /
b110000 !"
b110000 $"
b10000110110000000000110 3
b10000110110000000000110 i
b110000 +
b110000 ""
b110000 ="
b110000 C"
b11000000001000100 .
b11000000001000100 a
b11000000001000100 }
b101100 ,
b101100 c
b101100 h
b101100 @"
b101100 A"
1!
#52000
0!
#54000
b10 5
b10 <"
b10 E"
b1101 @
b1101 {
b1101 D"
b1 )
b1 *"
b1 P"
b10 B
b10 e
b10 p
b10 9"
b110100 -
b110100 s
b110100 ?"
b11010000000100000 '
b11010000000100000 b
b11010000000100000 N"
b10 *
b10 q
b10 Q"
b101 D
b101 I
b101 k
b1 )"
12
1(
1A
bx F
bx K
bx `
b110100 0
b110100 u
b110100 &"
b110100000001000 4
b110100000001000 l
b110100000001000 L"
b110100000001000 M"
b110100000001000 K"
b101 8
b101 d
b101 m
b101 I"
b101 O"
b1 H"
b1 9
b1 J
b1 t
b1 G"
b11 F"
b1101 x
b1 w
b1000 S
b1100001011010000000100000 %"
b110100 /
b110100 !"
b110100 $"
b11000010110100000001000 3
b11000010110100000001000 i
b110100 +
b110100 ""
b110100 ="
b110100 C"
b11010000001010000 .
b11010000001010000 a
b11010000001010000 }
b110000 ,
b110000 c
b110000 h
b110000 @"
b110000 A"
1!
#56000
0!
#58000
0J"
b0 5
b0 <"
b0 E"
06
b0 )
b0 *"
b0 P"
b0 B
b0 e
b0 p
b0 9"
b100 @
b100 {
b100 D"
b111000 -
b111000 s
b111000 ?"
b0 '
b0 b
b0 N"
b1000 *
b1000 q
b1000 Q"
b0 D
b0 I
b0 k
b0 )"
1&
b0 E
b0 R
b0 o
0(
02
0A
b10 F
b10 K
b10 `
b0 7
b0 z
b0 -"
1G
b0 H
b0 T
b0 0"
b111000 0
b111000 u
b111000 &"
b0 4
b0 l
b0 L"
b0 M"
b0 K"
b1000 8
b1000 d
b1000 m
b1000 I"
b1000 O"
b100 H"
b0 9
b0 J
b0 t
b0 G"
b0 F"
b0 x
b100 w
b0 S
1;
b100100 ,"
b100000000000000000000 %"
b111000 /
b111000 !"
b111000 $"
b10010000000001000000000000000000 3
b10010000000001000000000000000000 i
b111000 +
b111000 ""
b111000 ="
b111000 C"
b110100 .
b110100 a
b110100 }
b110100 ,
b110100 c
b110100 h
b110100 @"
b110100 A"
1!
#60000
0!
#62000
1J"
b1000 5
b1000 <"
b1000 E"
16
b111100 -
b111100 s
b111100 ?"
b0 *
b0 q
b0 Q"
b1110 @
b1110 {
b1110 D"
1G
b1 :
b1 ."
b1 ;"
b1000 =
b1000 f
b1000 :"
b111100 0
b111100 u
b111100 &"
b0 8
b0 d
b0 m
b0 I"
b0 O"
b1110 H"
b1110 w
1<
0;
b101100 ,"
b1110000000000000000000 %"
b111100 /
b111100 !"
b111100 $"
b10110000000011100000000000000000 3
b10110000000011100000000000000000 i
b111100 +
b111100 ""
b111100 ="
b111100 C"
b111000 .
b111000 a
b111000 }
b111000 ,
b111000 c
b111000 h
b111000 @"
b111000 A"
1!
#64000
0!
#66000
1~
0J"
b1 H
b1 T
b1 0"
b0 B
b0 e
b0 p
b0 9"
0G
b0 5
b0 <"
b0 E"
06
b1000100 -
b1000100 s
b1000100 ?"
b1000 '
b1000 b
b1000 N"
b1000 D
b1000 I
b1000 k
b1000 )"
1&
b0 E
b0 R
b0 o
b100 @
b100 {
b100 D"
b110 F
b110 K
b110 `
b0 :
b0 ."
b0 ;"
b1 C
b1 /"
b1000100 0
b1000100 u
b1000100 &"
b10 4
b10 l
b10 L"
b10 M"
b10 K"
b100 H"
b1000 9
b1000 J
b1000 t
b1000 G"
b1110 F"
b100 w
b10 S
0<
b110 ,"
b111000100000000000000001000 %"
b1000100 /
b1000100 !"
b1000100 $"
b11001110001000000000000000010 3
b11001110001000000000000000010 i
b1000 *
b1000 q
b1000 Q"
b1000000 +
b1000000 ""
b1000000 ="
b1000000 C"
b1000100 .
b1000100 a
b1000100 }
b111100 ,
b111100 c
b111100 h
b111100 @"
b111100 A"
b1000 8
b1000 d
b1000 m
b1000 I"
b1000 O"
1!
#68000
0!
#70000
b11111111111111111111111111111110 5
b11111111111111111111111111111110 <"
b11111111111111111111111111111110 E"
1~
b11111111111111111111111111111110 B
b11111111111111111111111111111110 e
b11111111111111111111111111111110 p
b11111111111111111111111111111110 9"
b1001100 -
b1001100 s
b1001100 ?"
b11 *
b11 q
b11 Q"
b11 D
b11 I
b11 k
b1 )"
0&
b11111111111111111111111111111110 E
b11111111111111111111111111111110 R
b11111111111111111111111111111110 o
b10 @
b10 {
b10 D"
b10 C
b10 /"
b1001100 0
b1001100 u
b1001100 &"
b11 8
b11 d
b11 m
b11 I"
b11 O"
b10 H"
b1 9
b1 J
b1 t
b1 G"
b11 F"
b10 w
b101 ,"
b1100010000000000000001000 %"
b1001100 /
b1001100 !"
b1001100 $"
b10100011000100000000000000010 3
b10100011000100000000000000010 i
b1001000 +
b1001000 ""
b1001000 ="
b1001000 C"
b1001100 .
b1001100 a
b1001100 }
b1000100 ,
b1000100 c
b1000100 h
b1000100 @"
b1000100 A"
1!
#72000
0!
#74000
0~
b1010000 5
b1010000 <"
b1010000 E"
b0 H
b0 T
b0 0"
1&
b0 B
b0 e
b0 p
b0 9"
b10 7
b10 z
b10 -"
b10 :
b10 ."
b10 ;"
1J"
b0 C
b0 /"
b1010100 -
b1010100 s
b1010100 ?"
b1010100 '
b1010100 b
b1010100 N"
b0 *
b0 q
b0 Q"
b0 D
b0 I
b0 k
b0 )"
b0 E
b0 R
b0 o
b11111 @
b11111 {
b11111 D"
b10 F
b10 K
b10 `
16
1>
b1010100 0
b1010100 u
b1010100 &"
b10101 4
b10101 l
b10101 L"
b10101 M"
b10101 K"
b0 8
b0 d
b0 m
b0 I"
b0 O"
b0 H"
b0 9
b0 J
b0 t
b0 G"
b0 F"
b0 w
b10101 S
b11 ,"
b1010100 %"
b1010000 /
b1010000 !"
b1010000 $"
b1100000000000000000000010101 3
b1100000000000000000000010101 i
b1010000 +
b1010000 ""
b1010000 ="
b1010000 C"
b10100000 .
b10100000 a
b10100000 }
b1001100 ,
b1001100 c
b1001100 h
b1001100 @"
b1001100 A"
1!
#76000
0!
#78000
b101010 B
b101010 e
b101010 p
b101010 9"
0&
b101010 E
b101010 R
b101010 o
b10000 @
b10000 {
b10000 D"
b101010 D
b101010 I
b101010 k
b0 7
b0 z
b0 -"
1G
b0 :
b0 ."
b0 ;"
1J"
b1011000 -
b1011000 s
b1011000 ?"
b10101000 '
b10101000 b
b10101000 N"
b10 F
b10 K
b10 `
16
0>
b1011000 0
b1011000 u
b1011000 &"
b101010 5
b101010 <"
b101010 E"
b101010 4
b101010 l
b101010 L"
b101010 M"
b101010 K"
b10000 H"
b10000 w
b101010 S
b1001 ,"
b10000000000000010101000 %"
b1011000 /
b1011000 !"
b1011000 $"
b100100000100000000000000101010 3
b100100000100000000000000101010 i
b1011000 +
b1011000 ""
b1011000 ="
b1011000 C"
b11111100 .
b11111100 a
b11111100 }
b1010100 ,
b1010100 c
b1010100 h
b1010100 @"
b1010100 A"
1!
#80000
0!
#82000
b0 5
b0 <"
b0 E"
0J"
b0 B
b0 e
b0 p
b0 9"
0G
b1010000 -
b1010000 s
b1010000 ?"
b110000 '
b110000 b
b110000 N"
b0 D
b0 I
b0 k
b10000 )"
1&
b0 E
b0 R
b0 o
b0 @
b0 {
b0 D"
1?
bx F
bx K
bx `
b1 7
b1 z
b1 -"
b10 H
b10 T
b10 0"
b1011100 0
b1011100 u
b1011100 &"
b1100 4
b1100 l
b1100 L"
b1100 M"
b1100 K"
b0 H"
b1010000 9
b1010000 J
b1010000 t
b1010000 G"
b11111 F"
b0 w
b1100 S
b0 ,"
b1111100000000000000000110000 %"
b1011100 /
b1011100 !"
b1011100 $"
b11111000000000000000001100 3
b11111000000000000000001100 i
b0 *
b0 q
b0 Q"
b1011100 +
b1011100 ""
b1011100 ="
b1011100 C"
b10001000 .
b10001000 a
b10001000 }
b1011000 ,
b1011000 c
b1011000 h
b1011000 @"
b1011000 A"
b0 8
b0 d
b0 m
b0 I"
b0 O"
1!
#84000
0!
#86000
06
b1011100 '
b1011100 b
b1011100 N"
b1011100 -
b1011100 s
b1011100 ?"
b0 )"
0?
b10 F
b10 K
b10 `
b0 7
b0 z
b0 -"
b0 H
b0 T
b0 0"
1>
b1011100 0
b1011100 u
b1011100 &"
b10111 4
b10111 l
b10111 L"
b10111 M"
b10111 K"
b0 9
b0 J
b0 t
b0 G"
b0 F"
b10111 S
b111 ,"
b1011100 %"
b1010100 /
b1010100 !"
b1010100 $"
b11100000000000000000000010111 3
b11100000000000000000000010111 i
b1010100 +
b1010100 ""
b1010100 ="
b1010100 C"
b10101100 .
b10101100 a
b10101100 }
b1010000 ,
b1010000 c
b1010000 h
b1010000 @"
b1010000 A"
1!
#88000
0!
#90000
1J"
16
b0 @
b0 {
b0 D"
b1100000 -
b1100000 s
b1100000 ?"
b0 '
b0 b
b0 N"
b0 F
b0 K
b0 `
b1 7
b1 z
b1 -"
b10 H
b10 T
b10 0"
0>
b1100000 0
b1100000 u
b1100000 &"
b0 4
b0 l
b0 L"
b0 M"
b0 K"
b0 S
b0 ,"
b0 %"
b1100000 /
b1100000 !"
b1100000 $"
b0 3
b0 i
b1100000 +
b1100000 ""
b1100000 ="
b1100000 C"
b1011100 .
b1011100 a
b1011100 }
b1011100 ,
b1011100 c
b1011100 h
b1011100 @"
b1011100 A"
1!
#92000
0!
#94000
0J"
b10100000 5
b10100000 <"
b10100000 E"
06
b10100000 B
b10100000 e
b10100000 p
b10100000 9"
b11111 @
b11111 {
b11111 D"
b1100100 -
b1100100 s
b1100100 ?"
b11111111111111111111111111111100 '
b11111111111111111111111111111100 b
b11111111111111111111111111111100 N"
b1010000 D
b1010000 I
b1010000 k
b10000 )"
0&
b10100000 E
b10100000 R
b10100000 o
b11111 )
b11111 *"
b11111 P"
b10 F
b10 K
b10 `
b0 7
b0 z
b0 -"
b0 H
b0 T
b0 0"
b1100100 0
b1100100 u
b1100100 &"
b11111111111111111111111111111111 4
b11111111111111111111111111111111 l
b11111111111111111111111111111111 L"
b11111111111111111111111111111111 M"
b1111111111111111 K"
b1010000 8
b1010000 d
b1010000 m
b1010000 I"
b1010000 O"
b11111 H"
b1010000 9
b1010000 J
b1010000 t
b1010000 G"
b11111 F"
b11111 x
b11111 w
b11111 ("
b111111 S
b111111 ,"
b1111111111111111111111111100 %"
b1100100 /
b1100100 !"
b1100100 $"
b11111111111111111111111111111111 3
b11111111111111111111111111111111 i
b1100100 +
b1100100 ""
b1100100 ="
b1100100 C"
b1011100 .
b1011100 a
b1011100 }
b1100000 ,
b1100000 c
b1100000 h
b1100000 @"
b1100000 A"
1!
#96000
0!
#98000
1J"
b0 5
b0 <"
b0 E"
b0 @
b0 {
b0 D"
16
1&
b0 B
b0 e
b0 p
b0 9"
b1101000 -
b1101000 s
b1101000 ?"
b0 '
b0 b
b0 N"
b0 D
b0 I
b0 k
b0 )"
b0 E
b0 R
b0 o
b0 )
b0 *"
b0 P"
b0 F
b0 K
b0 `
b1 7
b1 z
b1 -"
b10 H
b10 T
b10 0"
b1101000 0
b1101000 u
b1101000 &"
b0 4
b0 l
b0 L"
b0 M"
b0 K"
b0 8
b0 d
b0 m
b0 I"
b0 O"
b0 H"
b0 9
b0 J
b0 t
b0 G"
b0 F"
b0 x
b0 w
b0 ("
b0 S
b0 ,"
b0 %"
b1101000 /
b1101000 !"
b1101000 $"
b0 3
b0 i
b1101000 +
b1101000 ""
b1101000 ="
b1101000 C"
b1100100 .
b1100100 a
b1100100 }
b1100100 ,
b1100100 c
b1100100 h
b1100100 @"
b1100100 A"
1#
1!
#100000
0!
#102000
b1101100 -
b1101100 s
b1101100 ?"
b1101100 0
b1101100 u
b1101100 &"
b1101100 /
b1101100 !"
b1101100 $"
b1101100 +
b1101100 ""
b1101100 ="
b1101100 C"
b1101000 .
b1101000 a
b1101000 }
b1101000 ,
b1101000 c
b1101000 h
b1101000 @"
b1101000 A"
b1000001 %
1!
