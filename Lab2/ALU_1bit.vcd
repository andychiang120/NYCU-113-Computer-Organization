$date
	Wed Jul 30 03:06:24 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module ALU_1bit_tb $end
$var wire 1 ! sum $end
$var wire 1 " carry $end
$var reg 1 # Ainvert $end
$var reg 1 $ Binvert $end
$var reg 1 % a $end
$var reg 1 & b $end
$var reg 1 ' cin $end
$var reg 1 ( less $end
$var reg 2 ) operation [1:0] $end
$scope module UUT $end
$var wire 1 # Ainvert $end
$var wire 1 $ Binvert $end
$var wire 1 * _src1 $end
$var wire 1 + _src2 $end
$var wire 1 , and_result $end
$var wire 1 ' cin $end
$var wire 1 - cout_w $end
$var wire 1 . g1 $end
$var wire 1 / g2 $end
$var wire 1 0 g3 $end
$var wire 1 ( less $end
$var wire 2 1 operation [1:0] $end
$var wire 1 2 or_result $end
$var wire 1 3 s $end
$var wire 1 % src1 $end
$var wire 1 & src2 $end
$var wire 1 4 result_w $end
$var wire 1 5 i2 $end
$var wire 1 6 i1 $end
$var reg 1 " cout $end
$var reg 1 ! result $end
$scope module mux1 $end
$var wire 1 7 _select $end
$var wire 1 8 g1 $end
$var wire 1 9 g2 $end
$var wire 1 : result_w $end
$var wire 1 # select $end
$var wire 1 % src1 $end
$var wire 1 * src2 $end
$var reg 1 6 result $end
$upscope $end
$scope module mux2 $end
$var wire 1 ; _select $end
$var wire 1 < g1 $end
$var wire 1 = g2 $end
$var wire 1 > result_w $end
$var wire 1 $ select $end
$var wire 1 & src1 $end
$var wire 1 + src2 $end
$var reg 1 5 result $end
$upscope $end
$scope module mux3 $end
$var wire 1 ? _sel0 $end
$var wire 1 @ _sel1 $end
$var wire 1 A g1 $end
$var wire 1 B g2 $end
$var wire 1 C g3 $end
$var wire 1 D g4 $end
$var wire 1 E result_w $end
$var wire 2 F select [1:0] $end
$var wire 1 2 src1 $end
$var wire 1 , src2 $end
$var wire 1 3 src3 $end
$var wire 1 ( src4 $end
$var reg 1 4 result $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 F
1E
0D
0C
0B
1A
1@
1?
1>
0=
1<
1;
1:
09
18
17
16
15
14
03
12
b0 1
00
1/
0.
1-
1,
0+
0*
b0 )
0(
0'
1&
1%
0$
0#
1"
1!
$end
#21000
0A
0?
1B
b1 )
b1 1
b1 F
#42000
0!
04
0E
0B
0@
b11 )
b11 1
b11 F
#63000
